起始产生式位置：0
终结符集 = { != # ( ) * + , - / ; < <= = == > >= @ double else float identifier if int number return void while { } }
非终结符集 = { AddSubExp Args AssignStmt Block CallFunCheck CallStmt CreateFunTable_m Def DefList Exp ExtDef ExtDefList Factor FunDec IfNext IfStmt IfStmt_m1 IfStmt_m2 IfStmt_next Item ParamDec Program Relop ReturnStmt S Stmt StmtList VarList VarSpecifier WhileStmt WhileStmt_m1 WhileStmt_m2 }
产生式：
0：S-->Program 
1：Program-->ExtDefList 
2：ExtDefList-->ExtDef ExtDefList 
3：ExtDefList-->@ 
4：ExtDef-->VarSpecifier identifier ; 
5：ExtDef-->VarSpecifier FunDec Block 
6：VarSpecifier-->int 
7：VarSpecifier-->void 
8：VarSpecifier-->float 
9：VarSpecifier-->double 
10：FunDec-->identifier CreateFunTable_m ( VarList ) 
11：CreateFunTable_m-->@ 
12：VarList-->ParamDec , VarList 
13：VarList-->ParamDec 
14：VarList-->@ 
15：VarList-->void 
16：ParamDec-->VarSpecifier identifier 
17：Block-->{ DefList StmtList } 
18：DefList-->Def DefList 
19：DefList-->@ 
20：Def-->VarSpecifier identifier ; 
21：StmtList-->Stmt StmtList 
22：StmtList-->@ 
23：Stmt-->AssignStmt ; 
24：Stmt-->ReturnStmt ; 
25：Stmt-->IfStmt 
26：Stmt-->WhileStmt 
27：Stmt-->CallStmt ; 
28：AssignStmt-->identifier = Exp 
29：Exp-->AddSubExp 
30：Exp-->Exp Relop AddSubExp 
31：AddSubExp-->Item 
32：AddSubExp-->Item + Item 
33：AddSubExp-->Item - Item 
34：Item-->Factor 
35：Item-->Factor * Factor 
36：Item-->Factor / Factor 
37：Factor-->number 
38：Factor-->( Exp ) 
39：Factor-->identifier 
40：Factor-->CallStmt 
41：CallStmt-->identifier ( CallFunCheck Args ) 
42：CallFunCheck-->@ 
43：Args-->Exp , Args 
44：Args-->Exp 
45：Args-->@ 
46：ReturnStmt-->return Exp 
47：ReturnStmt-->return 
48：Relop-->> 
49：Relop-->< 
50：Relop-->>= 
51：Relop--><= 
52：Relop-->== 
53：Relop-->!= 
54：IfStmt-->if IfStmt_m1 ( Exp ) IfStmt_m2 Block IfNext 
55：IfStmt_m1-->@ 
56：IfStmt_m2-->@ 
57：IfNext-->@ 
58：IfNext-->IfStmt_next else Block 
59：IfStmt_next-->@ 
60：WhileStmt-->while WhileStmt_m1 ( Exp ) WhileStmt_m2 Block 
61：WhileStmt_m1-->@ 
62：WhileStmt_m2-->@ 
